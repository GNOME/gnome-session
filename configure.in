AC_INIT(panel)

dnl ==========================================================================
dnl
dnl If you add a version number here, you *must* add an AC_SUBST line for
dnl it too, or it will never make it into the spec file!
dnl
dnl ==========================================================================

GTK_REQUIRED=1.2.5
GDK_PIXBUF_REQUIRED=0.7.0
LIBGLADE_REQUIRED=0.14
SCROLLKEEPER_REQUIRED=0.1.4
GNOME_LIBS_REQUIRED=1.0.59
ORBIT_REQUIRED=0.5.0
CONTROL_CENTER_REQUIRED=1.4.0
GNOME_PRINT_OPTIONAL=0.25

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-core, 1.4.0.6)

AM_MAINTAINER_MODE

AM_ACLOCAL_INCLUDE(macros)

AM_PROG_XML_I18N_TOOLS

dnl
dnl let applications configure for gnome
dnl
gnome_cv_use_gnome=yes

GNOME_INIT(capplet)

AC_ISC_POSIX
AC_PROG_CC
AC_STDC_HEADERS
AC_ARG_PROGRAM
AM_PROG_LIBTOOL
AM_PROG_LEX
AC_PROG_YACC
AC_PATH_PROGS(PATH_TO_XRDB, "xrdb")

GNOME_COMPILE_WARNINGS

GNOME_X_CHECKS
GNOME_XML_CHECK

AM_PATH_GTK($GTK_REQUIRED, ,[
AC_MSG_ERROR(Please upgrade your GTK+)])

AC_SUBST(GTK_REQUIRED)

dnl Check for new enough gnome-libs
CFLAGS_save=$CFLAGS
LIBS_save=$LIBS
CFLAGS=`gnome-config --cflags gnomeui`
LIBS=`gnome-config --libs gnomeui`

AC_CHECK_LIB(gnomeui, gnome_window_icon_set_default_from_file, ,[
AC_MSG_ERROR(gnome-libs 1.0.59 or higher is required.)])

AC_SUBST(GNOME_LIBS_REQUIRED)

CFLAGS=$CFLAGS_save
LIBS=$LIBS_save

dnl utility conditional
AM_CONDITIONAL(FALSE, test "x" = "y")

ALL_LINGUAS="az bg ca cs da de el en_GB es et eu fi fr ga gl hu it ja ko lt lv ms nl nn no pl pt pt_BR ro ru sk sl sp sr sv ta tr uk wa zh_CN zh_TW"
AM_GNOME_GETTEXT
# AM_GNOME_GETTEXT above substs $DATADIRNAME
# this is the directory where the *.{mo,gmo} files are installed
gnomelocaledir='${prefix}/share/locale'
AC_SUBST(gnomelocaledir)

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

AC_CHECK_HEADERS(dlfcn.h dl.h syslog.h tcpd.h)
AC_CHECK_LIB(dl, dlopen, DL_LIB="-ldl",[
AC_CHECK_LIB(dld, shl_load, DL_LIB="-ldld",[
AC_CHECK_FUNCS(dlopen, DL_LIB="",
AC_MSG_ERROR(Dynamic linking is not available on this platform.  Some
apps, like panel, will not run properly.))
])])
AC_SUBST(DL_LIB)

for dir in `(IFS=:; for i in $PATH; do echo $i ; done)` ; do
  if test -f $dir/orbit-idl ; then
     orbit_prefix=`echo $dir | sed 's%/bin$%%' |sed 's%/bin/$%%'`
     break
  fi
done

ORB_LIBS="$ORBIT_LIBS"
ORB_CFLAGS="$ORBIT_CFLAGS"

AC_SUBST(ORB_LIBS)
AC_SUBST(ORB_CFLAGS)
AC_SUBST(ORBIT_REQUIRED)

dnl
dnl CApplet, Note that the libs and all that is set up in gnome_init,
dnl but gnome_init is truly dumb and doesn't require it, so we need to
dnl do a separate check
dnl
AC_MSG_CHECKING(for CApplet library)
vers=`$GNOME_CONFIG --modversion capplet`
case "x$vers" in
  xcapplet-*)
    AC_MSG_RESULT(found)
    ;;
  *)
    AC_MSG_ERROR([Did not find CApplet library, you probably need to install control-center first])
    ;;
esac

AC_SUBST(CONTROL_CENTER_REQUIRED)


dnl
dnl Configure Easter Egg
dnl
AC_MSG_CHECKING(for Configure Easter Egg version >= 3.14)
AC_MSG_RESULT(found)

dnl
dnl GdkPixBuf
dnl
AC_MSG_CHECKING(for GdkPixbuf library >= $GDK_PIXBUF_REQUIRED)
PIXBUF_CFLAGS=`$GNOME_CONFIG --cflags gdk_pixbuf`
PIXBUF_LIBS=`$GNOME_CONFIG --libs gdk_pixbuf`
if test "x$PIXBUF_CFLAGS" != x ; then
    vers=`gdk-pixbuf-config --version | awk 'BEGIN { FS = "."; } { printf "%d", ($1 * 1000 + $2) * 1000 + $3;}'`
    if test "$vers" -ge 0007000; then
        AC_MSG_RESULT(found)
    else
       AC_MSG_ERROR(You need at least GdkPixbuf version 0.7.0 for the panel)
    fi
else
    AC_MSG_ERROR(Did not find GdkPixbuf installed)
fi
AC_SUBST(PIXBUF_CFLAGS)
AC_SUBST(PIXBUF_LIBS)
AC_SUBST(GDK_PIXBUF_REQUIRED)

dnl
dnl GnomeCanvasPixbuf
dnl
CANVAS_PIXBUF_CFLAGS=`$GNOME_CONFIG --cflags gnomecanvaspixbuf`
CANVAS_PIXBUF_LIBS=`$GNOME_CONFIG --libs gnomecanvaspixbuf`
AC_SUBST(CANVAS_PIXBUF_CFLAGS)
AC_SUBST(CANVAS_PIXBUF_LIBS)
if test "x$CANVAS_PIXBUF_CFLAGS" = x ; then
	AC_MSG_ERROR(GnomeCanvasPixbuf is required for gnome-about.
This is contained in the gdk-pixbuf module, however, make sure to build
this module after you build gnome-libs)
fi

dnl
dnl Gnome Terminal
dnl
ZVT_LIBS=`$GNOME_CONFIG --libs zvt`
AC_SUBST(ZVT_LIBS)

dnl
dnl We require libglade in a bunch of places
dnl
AC_MSG_CHECKING(for Glade libraries >= $LIBGLADE_REQUIRED)
libglade_ok=no
if gnome-config --libs libglade > /dev/null 2>&1; then 
    verstxt=`gnome-config --modversion libglade`
    vers=`echo "$verstxt" | awk -F. '{ printf "%d", $1 * 1000 + $2;}'`
    if test "$vers" -ge 14; then
	AC_MSG_RESULT($marker_ok found $verstxt)
	libglade_ok=yes
    else
        AC_MSG_RESULT($marker_fail found only $verstxt)
    fi
else
    AC_MSG_RESULT($marker_fail not found)
fi
if test "$libglade_ok" = no; then
    AC_MSG_ERROR(You need at least libglade 0.14 for this version of gnome-core)
fi
unset libglade_ok
GT_LIBS="libglade zvt gnorba gnomeui"
GNOME_TERMINAL_LIBS=`gnome-config --libs $GT_LIBS`
GNOME_TERMINAL_CFLAGS=`gnome-config --cflags $GT_LIBS`
AC_SUBST(GNOME_TERMINAL_LIBS)
AC_SUBST(GNOME_TERMINAL_CFLAGS)
AC_SUBST(LIBGLADE_REQUIRED)

GLADE_LIBS=`gnome-config --libs libglade`
GLADE_CFLAGS=`gnome-config --cflags libglade`
AC_SUBST(GLADE_LIBS)
AC_SUBST(GLADE_CFLAGS)

dnl
dnl libpng
dnl
PNG_LIBS=
AC_CHECK_LIB(png, png_init_io, [
	     PNG_LIBS="-lpng -lz"],[
	     AC_MSG_ERROR(libpng is required for gnome-core)])
AC_SUBST(PNG_LIBS)

dnl
dnl gnome-session
dnl
dnl $GNOME_HAVE_SM comes from GNOME_X_CHECKS
AM_CONDITIONAL(SESSION, test "$GNOME_HAVE_SM" = true)

AC_MSG_CHECKING("whether to use TCP wrappers")
LIBWRAP_PATH=""
for I in $LDFLAGS $LIBS -L/usr/lib -L/usr/local/lib; do
        case "$I" in
        -L*)
        THEFILE="`echo $I | sed -e 's,^-L,,'`"
        echo "From $I, checking in dir $THEFILE for libwrap.a" 1>&5
        if test -f $THEFILE/libwrap.a; then
                LIBWRAP_PATH="$THEFILE"
                echo "Found in $LIBWRAP_PATH" 1>&5
                break
        fi
	        esac
done
if test -n "$LIBWRAP_PATH"; then
        AC_MSG_RESULT(yes)
else
        AC_MSG_RESULT(no)
fi

if test -n "$LIBWRAP_PATH"; then
        nm $LIBWRAP_PATH/libwrap.* | grep 'T setenv' && LIBWRAP_PATH=""
        if test -z "$LIBWRAP_PATH"; then
                echo "*********************************************************"
                echo " You have a broken TCP wrappers library (setenv included)"
                echo " Please get the latest TCP wrappers package from your OS"
                echo " vendor, or recompile TCP wrappers to not include a"
                echo " setenv() implementation."
                echo
                echo "Not using TCP wrappers after all."
                echo "*********************************************************"
        fi
fi
dnl We need the header files too!
if test "$ac_cv_header_syslog_h" != yes || test "$ac_cv_header_tcpd_h" != yes; then
	echo "Resetting $LIBWRAP_PATH because syslog is $ac_cv_header_syslog_h and tcpd is $ac_cv_header_tcpd_h" 1>&5
	LIBWRAP_PATH=""
fi

dnl find out if we need -lnsl or whatever
LIBWRAP_NSL=
if test -n "$LIBWRAP_PATH"; then
        AC_MSG_CHECKING(whether -lwrap requires -lnsl)
        ORIG_LIBS="$LIBS"
        LIBS="-L$LIBWRAP_PATH -lwrap $LIBS"
        AC_TRY_LINK([
extern int hosts_access;
int allow_severity, deny_severity;
], [return hosts_access;], ,[
dnl try with -lnsl
OLD_LIBS="$LIBS"
LIBS="$LIBS -lnsl"
AC_TRY_LINK([
extern int hosts_access;
int allow_severity, deny_severity;
], [return hosts_access;], LIBWRAP_NSL="-lnsl",
LIBWRAP_PATH="")
LIBS="$OLD_LIBS"
])
        LIBS="$ORIG_LIBS"
if test -n "$LIB_NSL"; then
        AC_MSG_RESULT(yes)
        LIBS="$LIBS $LIB_NSL"
else
        AC_MSG_RESULT(no)
fi
fi
LIBWRAP_LIBS=
if test -n "$LIBWRAP_PATH"; then
	LIBWRAP_LIBS="-L$LIBWRAP_PATH -lwrap $LIBWRAP_NSL"
	AC_DEFINE(HAVE_HOSTS_ACCESS)
fi
AC_SUBST(LIBWRAP_LIBS)

AC_ARG_WITH(window-manager,
[  --with-window-manager=NAME
			  Specify default window manager],[
    WINDOW_MANAGER="$with_window_manager"], [
    dnl gnome-wm is a shell script that starts the WM.
    WINDOW_MANAGER=gnome-wm])
AC_SUBST(WINDOW_MANAGER)

dnl
dnl X11 Xinerama extension
dnl
AC_ARG_ENABLE(xinerama,
  [  --disable-xinerama      Disable Xinerama support],,
  with_xinerama=yes)
XINERAMA_LIBS=
if test x$with_xinerama != xno ; then
	AC_CHECK_HEADER(X11/extensions/Xinerama.h, [
		AC_CHECK_LIB(Xinerama, XineramaQueryScreens, [
		     	AC_DEFINE(HAVE_LIBXINERAMA)
		     	XINERAMA_LIBS="-lXinerama"
		     	XINERAMA_SUPPORT=yes],, $GTK_LIBS)
	])
fi
AC_SUBST(XINERAMA_LIBS)


dnl help-browser using gtkhtml
AC_ARG_WITH(gtkhtml,
[  --with-gtkhtml=PREFIX   Specify gtkhtml prefix],[
    GTK_HTML_PREFIX="$with_gtkhtml"], [
    GTK_HTML_PREFIX=`$GNOME_CONFIG --prefix`])
AC_SUBST(GTK_HTML_PREFIX)

dnl help-browser using gtkhtml and/or general gnome-print usage
dnl for general use we don't use the prefix but we use it to disable
dnl gnome-print
AC_ARG_WITH(gnome-print,
[  --with-gnome-print=PREFIX
                          Specify gnome-print prefix],[
    GNOME_PRINT_PREFIX="$with_gnome_print"], [
    GNOME_PRINT_PREFIX=`$GNOME_CONFIG --prefix`])
AC_SUBST(GNOME_PRINT_PREFIX)

help_use_gtkhtml=false

CPPFLAGS_save=$CPPFLAGS
LDFLAGS_save=$LDFLAGS
CPPFLAGS=`$GNOME_CONFIG --cflags gtkhtml`
LDFLAGS=`$GNOME_CONFIG --libs gtkhtml`

lib_gtkhtml=false
AC_CHECK_LIB(gtkhtml, gtk_html_construct, lib_gtkhtml=true, [
	AC_MSG_WARN([Recent enough GtkHTML library not found (using GtkXmHTML)
	])
])

CPPFLAGS=$CPPFLAGS_save
LDFLAGS=$LDFLAGS_save

dnl this shouldn't be enabled by default yet, since gtkhtml has some bugs
AC_ARG_ENABLE(gtkhtml-help, [  --enable-gtkhtml-help   Use GtkHTML for the help browser],
	gtkhtml_enabled="$enableval", gtkhtml_enabled=no)

if test "x$gtkhtml_enabled" = "xyes" ; then
	if test "x$lib_gtkhtml" = "xtrue" ; then
		AC_MSG_CHECKING(for static libgtkhtml)
		if test -e $GTK_HTML_PREFIX/lib/libgtkhtml.a ; then
			AC_MSG_RESULT(yes)
			AC_MSG_CHECKING(for static libgnomeprint)
			if test -e $GNOME_PRINT_PREFIX/lib/libgnomeprint.a ; then
				AC_MSG_RESULT(yes)
				help_use_gtkhtml=true
			else
				AC_MSG_RESULT(no)
			fi
		else
			AC_MSG_RESULT(no)
		fi
	fi
fi

AC_MSG_CHECKING(which HTML widget to use)
if test "x$help_use_gtkhtml" = "xtrue" ; then
	AC_MSG_RESULT(GtkHTML)
else
	AC_MSG_RESULT(GtkXmHTML)
fi

AM_CONDITIONAL(HELP_USE_GTKHTML, test x$help_use_gtkhtml = xtrue)
dnl AC_SUBST(HELP_USE_GTKHTML)

dnl
dnl General use of gnome-print
dnl
GNOME_PRINT_LIBS=""
GNOME_PRINT_CFLAGS=""
if test "x$with_gnome_print" != "xno" ; then
  AC_MSG_CHECKING(for gnome-print libraries >= $GNOME_PRINT_OPTIONAL)
  if $GNOME_CONFIG --libs print > /dev/null 2>&1; then 
      verstxt=`$GNOME_CONFIG --modversion print`
      vers=`echo "$verstxt" | awk -F. '{ printf "%d", $1 * 1000 + $2;}'`
      if test "$vers" -ge 25; then
	  AC_MSG_RESULT($marker_ok found $verstxt)
          GNOME_PRINT_LIBS=`$GNOME_CONFIG --libs print`
          GNOME_PRINT_CFLAGS=`$GNOME_CONFIG --cflags print`
          AC_DEFINE(HAVE_GNOME_PRINT)
      else
          AC_MSG_RESULT($marker_fail found only $verstxt)
      fi
  else
      AC_MSG_RESULT($marker_fail not found)
  fi
fi
AC_SUBST(GNOME_PRINT_CFLAGS)
AC_SUBST(GNOME_PRINT_LIBS)


dnl help-browser
dnl I found `inet_aton' in -lresolv on solaris
oLIBS="$LIBS"
RES_LIBS=
# the following two are covered by X11 too.  If inet_aton is found in
# plain libc, -lsocket or -lnsl, RES_LIBS will be empty.
AC_CHECK_FUNC(connect,,[AC_CHECK_LIB(socket,connect)])
AC_CHECK_FUNC(gethostbyname,,[AC_CHECK_LIB(nsl,gethostbyname)])
AC_CHECK_FUNC(inet_aton,,[AC_CHECK_LIB(resolv,inet_aton,RES_LIBS="-lresolv")])
AC_SUBST(RES_LIBS)
LIBS="$oLIBS"

dnl
dnl Check for zvt_term_reset and del_is_del
dnl
oLIBS="$LIBS"
LIBS="$GNOMEUI_LIBS $GNOME_LIBDIR $ZVT_LIBS"
AC_CHECK_FUNC(zvt_term_reset,[AC_DEFINE(HAVE_ZVT_TERM_RESET)])
AC_CHECK_FUNC(zvt_term_set_del_is_del,[AC_DEFINE(HAVE_ZVT_DEL_IS_DEL)])
LIBS="$oLIBS"

dnl
dnl Check for libbz2
dnl
oLIBS="$LIBS"
BZ_LIBS=""
AC_CHECK_LIB(bz2, bzopen, [
	AC_DEFINE(HAVE_LIBBZ2)
	LIBS=$oLIBS
	BZ_LIBS="-lbz2"
	], AC_CHECK_LIB(bz2, BZ2_bzopen, [
	   AC_DEFINE(HAVE_LIBBZ2)
	   AC_DEFINE(HAVE_LIBBZ2_1_0)
	   LIBS=$oLIBS
	   BZ_LIBS="-lbz2"
	   ], AC_MSG_WARN([Recent enough BZ2 library not found. Help-Browser will not be able to read bzipped man/info pages])
))
AC_SUBST(BZ_LIBS)

dnl
dnl Place to look for KDE menus
dnl
AC_ARG_WITH(kde-datadir, [  --with-kde-datadir=DIR  Location of KDE data])

if test "x$with_kde_datadir" = x ; then
  kde_datadir=/usr/share
else
  kde_datadir=$with_kde_datadir
fi

AC_DEFINE_UNQUOTED(KDE_MENUDIR, "$kde_datadir/applnk")
AC_DEFINE_UNQUOTED(KDE_ICONDIR, "$kde_datadir/icons")
AC_DEFINE_UNQUOTED(KDE_MINI_ICONDIR, "$kde_datadir/icons/mini")

dnl
dnl Place to look for KDE docs
dnl
AC_ARG_WITH(kde-docdir, [  --with-kde-docdir=DIR   Location of KDE documentation])

if test "x$with_kde_docdir" = x ; then
  kde_docdir=/usr/doc/kde
else
  kde_docdir=$with_kde_docdir
fi

AC_DEFINE_UNQUOTED(KDE_DOCDIR, "$kde_docdir")

dnl
dnl ScrollKeeper
dnl
AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config, please install the scrollkeeper packaga)
fi
AC_SUBST(SCROLLKEEPER_REQUIRED)

dnl
dnl Test whether jw is installed
dnl
AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)

dnl AC_CONFIG_SUBDIRS(gemvt)

dnl gtk-doc stuff

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)
AM_CONDITIONAL(HAVE_GTK_DOC, $GTKDOC)
AC_SUBST(HAVE_GTK_DOC)

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc        Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no
  fi
fi

dnl
dnl Solaris and other OSes do not have IceListenForWellKnownConnections
dnl
oLIBS="$LIBS"
LIBS="$GNOMEUI_LIBS $GNOME_LIBDIR"
AC_CHECK_FUNCS(_IceTransNoListen)
LIBS="$oLIBS"

dnl
dnl Sun shipped a patch which makes gnome-session seg fault in a libICE call.
dnl Use the check for the broken libICE on Solaris _only_
dnl
dnl update: they've fixed this, so this is probably unnecessary
dnl         uncomment if this is still an issue
dnl         - jacob <jacob@ximian.com> 5/15/2001 
dnl
dnl uname_s=`uname -s`
dnl if test "x$uname_s" = xSunOS; then
dnl   AC_DEFINE(DO_LIBICE_CHECK)
dnl fi

dnl NOTE: We need to use a separate automake conditional for this
dnl       to make this work with the tarballs.
AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

dnl HACK to expand datadir
if test "x$prefix" != xNONE; then
  ICONDIR=`eval echo "${datadir}/pixmaps"`
else
  ICONDIR=`eval echo "${ac_default_prefix}/share/pixmaps"`
fi
AC_DEFINE_UNQUOTED(GNOME_ICONDIR,"${ICONDIR}")

AC_OUTPUT([
Makefile
gnome-core.spec
po/Makefile.in
macros/Makefile
panel/Makefile
panel/config/Makefile
panel/doc/Makefile
panel/help/Makefile
panel/help/C/Makefile
panel/help/de/Makefile
panel/help/es/Makefile
panel/help/it/Makefile
panel/help/ja/Makefile
panel/help/no/Makefile
applets/Makefile
applets/applet-dirs/Makefile
applets/gen_util/Makefile
applets/gen_util/help/Makefile
applets/gen_util/help/C/Makefile
applets/gen_util/help/C/clock/Makefile
applets/gen_util/help/C/mailcheck/Makefile
applets/gen_util/help/C/printer/Makefile
applets/gen_util/help/de/Makefile
applets/gen_util/help/da/Makefile
applets/gen_util/help/da/clock/Makefile
applets/gen_util/help/da/mailcheck/Makefile
applets/gen_util/help/da/printer/Makefile
applets/gen_util/help/es/Makefile
applets/gen_util/help/es/printer/Makefile
applets/gen_util/help/es/mailcheck/Makefile
applets/gen_util/help/it/Makefile
applets/gen_util/help/it/clock/Makefile
applets/gen_util/help/it/mailcheck/Makefile
applets/gen_util/help/it/printer/Makefile
applets/gen_util/help/no/Makefile
applets/gen_util/help/no/clock/Makefile
applets/gen_util/help/no/mailcheck/Makefile
applets/gen_util/help/no/printer/Makefile
applets/fish/Makefile
applets/fish/help/Makefile
applets/fish/help/C/Makefile
applets/fish/help/no/Makefile
applets/fish/help/da/Makefile
applets/fish/help/it/Makefile
applets/desk-guide/Makefile
applets/desk-guide/help/Makefile
applets/desk-guide/help/C/Makefile
applets/desk-guide/help/de/Makefile
applets/desk-guide/help/es/Makefile
applets/desk-guide/help/it/Makefile
applets/tasklist/Makefile
applets/tasklist/help/Makefile
applets/tasklist/help/C/Makefile
applets/tasklist/help/es/Makefile
core-docs/Makefile
core-docs/fdl/Makefile
core-docs/fdl/C/Makefile
core-docs/gpl/Makefile
core-docs/gpl/C/Makefile
core-docs/lgpl/Makefile
core-docs/lgpl/C/Makefile
core-docs/gnome-feedback/Makefile
core-docs/gnome-feedback/C/Makefile
core-docs/gnome-feedback/no/Makefile
desktop-links/Makefile
gnome-terminal/Makefile
gnome-terminal/C/Makefile
gnome-terminal/de/Makefile
gnome-terminal/da/Makefile
gnome-terminal/es/Makefile
gnome-terminal/it/Makefile
gnome-terminal/no/Makefile
help-browser/Makefile
help-browser/gnome-man2html/Makefile
help-browser/gnome-info2html/Makefile
help-browser/help/Makefile
help-browser/help/C/Makefile
help-browser/help/ca/Makefile
help-browser/help/da/Makefile
help-browser/help/el/Makefile
help-browser/help/es/Makefile
help-browser/help/et/Makefile
help-browser/help/eu/Makefile
help-browser/help/hu/Makefile
help-browser/help/fr/Makefile
help-browser/help/gl/Makefile
help-browser/help/it/Makefile
help-browser/help/ja/Makefile
help-browser/help/ko/Makefile
help-browser/help/lt/Makefile
help-browser/help/no/Makefile
help-browser/help/uk/Makefile
help-browser/help/wa/Makefile
gnome-hint/Makefile
gnome-about/Makefile
gmenu/Makefile
gnome-edit/Makefile
idl/Makefile
pixmaps/Makefile
gsm/Makefile
gsm/help/Makefile
gsm/help/C/Makefile
gsm/help/ja/Makefile
gsm/default.session.5
gsm/gnome-session.1
smproxy/Makefile
intl/Makefile
omf-install/Makefile])
